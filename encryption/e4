#!/bin/bash

test -n "$1" || { echo "no input provided"; exit 1; }

echo "enter the password"
read -s password
echo "loading the heavy cavalry..."

salt=$(openssl rand 24 | base64)

hashed_password=$(echo -n "$password" | argon2 "$salt" -id -t 2 -m 21 -p 4 -l 90 | grep Hash | rev | cut -b1-90 | rev)

length=${#hashed_password}
third=$((length / 3))

aes_key=$(echo $hashed_password | cut -c 1-$third)
cam_key=$(echo $hashed_password | cut -c $((third + 1))-$((2 * third)))
cha_key=$(echo $hashed_password | cut -c $((2 * third + 1))-)

echo "$salt" > "$1".e4

echo $aes_key | openssl enc -aes-256-cbc -salt -pbkdf2 -iter 250000 -in "$1" -pass stdin > "/tmp/encrypt3_"$1""
echo $cam_key | openssl enc -camellia-256-cbc -salt -pbkdf2 -iter 250000 -in "/tmp/encrypt3_"$1"" -pass stdin > "/tmp/encrypt3_2"$1""
echo $cha_key | openssl enc -chacha20 -salt -pbkdf2 -iter 250000 -in "/tmp/encrypt3_2"$1"" -pass stdin >> "$1".e4

rm -f "/tmp/encrypt3_2"$1""
rm -f "/tmp/encrypt3_"$1""

echo "successfully encrypted to '"$1".e4'"
