#!/usr/bin/python

import sys

def base58_encode(num, alphabet):
    result = ''
    while num > 0:
        result = alphabet[num % 58] + result
        num //= 58
    return result

def base58_decode(encoded, alphabet):
    result = 0
    for char in encoded:
        result = result * 58 + alphabet.index(char)
    return result

def string_to_hex(s):
    return s.hex()

def hex_to_decimal(hex_str):
    return int(hex_str, 16)

alphabet = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"

if len(sys.argv) > 1 and sys.argv[1] == "-d":
    try:
        while True:
            encoded_data = sys.stdin.readline().strip()
            if not encoded_data:
                break
            decimal = base58_decode(encoded_data, alphabet)
            hex_string = hex(decimal)[2:]
            if len(hex_string) % 2 == 1:
                hex_string = '0' + hex_string
            binary_data = bytes.fromhex(hex_string)
            sys.stdout.buffer.write(binary_data)
    except EOFError:
        pass
else:
    try:
        while True:
            binary_data = sys.stdin.buffer.read()
            if not binary_data:
                break
            hex_string = string_to_hex(binary_data)
            decimal = hex_to_decimal(hex_string)
            base58_encoded = base58_encode(decimal, alphabet)
            print(base58_encoded)
    except EOFError:
        pass
